/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app'
import { Route as DemoIndexRouteImport } from './routes/demo/index'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as V2OnboardRouteImport } from './routes/v2/onboard'
import { Route as V2Appv2LayoutRouteImport } from './routes/v2/_appv2Layout'
import { Route as TakeQuizQuizIdRouteImport } from './routes/take-quiz/$quizId'
import { Route as DotwellKnownFarcasterDotjsonRouteImport } from './routes/[.]well-known/farcaster[.]json'
import { Route as V2Appv2LayoutIndexRouteImport } from './routes/v2/_appv2Layout.index'
import { Route as DemoMinikitIndexRouteImport } from './routes/demo/minikit/index'
import { Route as AppCollectionIndexRouteImport } from './routes/_app/collection/index'
import { Route as AppBrowseIndexRouteImport } from './routes/_app/browse/index'
import { Route as AppAccountIndexRouteImport } from './routes/_app/account/index'
import { Route as V2Appv2LayoutCollectionRouteImport } from './routes/v2/_appv2Layout.collection'
import { Route as V2Appv2LayoutAccountRouteImport } from './routes/v2/_appv2Layout.account'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as ApiAiCompleteTestRouteImport } from './routes/api/ai/complete-test'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'

const V2RouteImport = createFileRoute('/v2')()

const V2Route = V2RouteImport.update({
  id: '/v2',
  path: '/v2',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoIndexRoute = DemoIndexRouteImport.update({
  id: '/demo/',
  path: '/demo/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const V2OnboardRoute = V2OnboardRouteImport.update({
  id: '/onboard',
  path: '/onboard',
  getParentRoute: () => V2Route,
} as any)
const V2Appv2LayoutRoute = V2Appv2LayoutRouteImport.update({
  id: '/_appv2Layout',
  getParentRoute: () => V2Route,
} as any)
const TakeQuizQuizIdRoute = TakeQuizQuizIdRouteImport.update({
  id: '/take-quiz/$quizId',
  path: '/take-quiz/$quizId',
  getParentRoute: () => rootRouteImport,
} as any)
const DotwellKnownFarcasterDotjsonRoute =
  DotwellKnownFarcasterDotjsonRouteImport.update({
    id: '/.well-known/farcaster.json',
    path: '/.well-known/farcaster.json',
    getParentRoute: () => rootRouteImport,
  } as any)
const V2Appv2LayoutIndexRoute = V2Appv2LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => V2Appv2LayoutRoute,
} as any)
const DemoMinikitIndexRoute = DemoMinikitIndexRouteImport.update({
  id: '/demo/minikit/',
  path: '/demo/minikit/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCollectionIndexRoute = AppCollectionIndexRouteImport.update({
  id: '/collection/',
  path: '/collection/',
  getParentRoute: () => AppRoute,
} as any)
const AppBrowseIndexRoute = AppBrowseIndexRouteImport.update({
  id: '/browse/',
  path: '/browse/',
  getParentRoute: () => AppRoute,
} as any)
const AppAccountIndexRoute = AppAccountIndexRouteImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => AppRoute,
} as any)
const V2Appv2LayoutCollectionRoute = V2Appv2LayoutCollectionRouteImport.update({
  id: '/collection',
  path: '/collection',
  getParentRoute: () => V2Appv2LayoutRoute,
} as any)
const V2Appv2LayoutAccountRoute = V2Appv2LayoutAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => V2Appv2LayoutRoute,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAiCompleteTestRoute = ApiAiCompleteTestRouteImport.update({
  id: '/api/ai/complete-test',
  path: '/api/ai/complete-test',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/.well-known/farcaster.json': typeof DotwellKnownFarcasterDotjsonRoute
  '/take-quiz/$quizId': typeof TakeQuizQuizIdRoute
  '/v2': typeof V2Appv2LayoutRouteWithChildren
  '/v2/onboard': typeof V2OnboardRoute
  '/': typeof AppIndexRoute
  '/demo': typeof DemoIndexRoute
  '/api/ai/complete-test': typeof ApiAiCompleteTestRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/v2/account': typeof V2Appv2LayoutAccountRoute
  '/v2/collection': typeof V2Appv2LayoutCollectionRoute
  '/account': typeof AppAccountIndexRoute
  '/browse': typeof AppBrowseIndexRoute
  '/collection': typeof AppCollectionIndexRoute
  '/demo/minikit': typeof DemoMinikitIndexRoute
  '/v2/': typeof V2Appv2LayoutIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesByTo {
  '/.well-known/farcaster.json': typeof DotwellKnownFarcasterDotjsonRoute
  '/take-quiz/$quizId': typeof TakeQuizQuizIdRoute
  '/v2': typeof V2Appv2LayoutIndexRoute
  '/v2/onboard': typeof V2OnboardRoute
  '/': typeof AppIndexRoute
  '/demo': typeof DemoIndexRoute
  '/api/ai/complete-test': typeof ApiAiCompleteTestRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/v2/account': typeof V2Appv2LayoutAccountRoute
  '/v2/collection': typeof V2Appv2LayoutCollectionRoute
  '/account': typeof AppAccountIndexRoute
  '/browse': typeof AppBrowseIndexRoute
  '/collection': typeof AppCollectionIndexRoute
  '/demo/minikit': typeof DemoMinikitIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/.well-known/farcaster.json': typeof DotwellKnownFarcasterDotjsonRoute
  '/take-quiz/$quizId': typeof TakeQuizQuizIdRoute
  '/v2': typeof V2RouteWithChildren
  '/v2/_appv2Layout': typeof V2Appv2LayoutRouteWithChildren
  '/v2/onboard': typeof V2OnboardRoute
  '/_app/': typeof AppIndexRoute
  '/demo/': typeof DemoIndexRoute
  '/api/ai/complete-test': typeof ApiAiCompleteTestRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/v2/_appv2Layout/account': typeof V2Appv2LayoutAccountRoute
  '/v2/_appv2Layout/collection': typeof V2Appv2LayoutCollectionRoute
  '/_app/account/': typeof AppAccountIndexRoute
  '/_app/browse/': typeof AppBrowseIndexRoute
  '/_app/collection/': typeof AppCollectionIndexRoute
  '/demo/minikit/': typeof DemoMinikitIndexRoute
  '/v2/_appv2Layout/': typeof V2Appv2LayoutIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/.well-known/farcaster.json'
    | '/take-quiz/$quizId'
    | '/v2'
    | '/v2/onboard'
    | '/'
    | '/demo'
    | '/api/ai/complete-test'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/v2/account'
    | '/v2/collection'
    | '/account'
    | '/browse'
    | '/collection'
    | '/demo/minikit'
    | '/v2/'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/.well-known/farcaster.json'
    | '/take-quiz/$quizId'
    | '/v2'
    | '/v2/onboard'
    | '/'
    | '/demo'
    | '/api/ai/complete-test'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/v2/account'
    | '/v2/collection'
    | '/account'
    | '/browse'
    | '/collection'
    | '/demo/minikit'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  id:
    | '__root__'
    | '/_app'
    | '/.well-known/farcaster.json'
    | '/take-quiz/$quizId'
    | '/v2'
    | '/v2/_appv2Layout'
    | '/v2/onboard'
    | '/_app/'
    | '/demo/'
    | '/api/ai/complete-test'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/v2/_appv2Layout/account'
    | '/v2/_appv2Layout/collection'
    | '/_app/account/'
    | '/_app/browse/'
    | '/_app/collection/'
    | '/demo/minikit/'
    | '/v2/_appv2Layout/'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  DotwellKnownFarcasterDotjsonRoute: typeof DotwellKnownFarcasterDotjsonRoute
  TakeQuizQuizIdRoute: typeof TakeQuizQuizIdRoute
  V2Route: typeof V2RouteWithChildren
  DemoIndexRoute: typeof DemoIndexRoute
  ApiAiCompleteTestRoute: typeof ApiAiCompleteTestRoute
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  DemoMinikitIndexRoute: typeof DemoMinikitIndexRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/v2': {
      id: '/v2'
      path: '/v2'
      fullPath: '/v2'
      preLoaderRoute: typeof V2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/': {
      id: '/demo/'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/v2/onboard': {
      id: '/v2/onboard'
      path: '/onboard'
      fullPath: '/v2/onboard'
      preLoaderRoute: typeof V2OnboardRouteImport
      parentRoute: typeof V2Route
    }
    '/v2/_appv2Layout': {
      id: '/v2/_appv2Layout'
      path: '/v2'
      fullPath: '/v2'
      preLoaderRoute: typeof V2Appv2LayoutRouteImport
      parentRoute: typeof V2Route
    }
    '/take-quiz/$quizId': {
      id: '/take-quiz/$quizId'
      path: '/take-quiz/$quizId'
      fullPath: '/take-quiz/$quizId'
      preLoaderRoute: typeof TakeQuizQuizIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/.well-known/farcaster.json': {
      id: '/.well-known/farcaster.json'
      path: '/.well-known/farcaster.json'
      fullPath: '/.well-known/farcaster.json'
      preLoaderRoute: typeof DotwellKnownFarcasterDotjsonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/v2/_appv2Layout/': {
      id: '/v2/_appv2Layout/'
      path: '/'
      fullPath: '/v2/'
      preLoaderRoute: typeof V2Appv2LayoutIndexRouteImport
      parentRoute: typeof V2Appv2LayoutRoute
    }
    '/demo/minikit/': {
      id: '/demo/minikit/'
      path: '/demo/minikit'
      fullPath: '/demo/minikit'
      preLoaderRoute: typeof DemoMinikitIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/collection/': {
      id: '/_app/collection/'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof AppCollectionIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/browse/': {
      id: '/_app/browse/'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof AppBrowseIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/account/': {
      id: '/_app/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AppAccountIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/v2/_appv2Layout/collection': {
      id: '/v2/_appv2Layout/collection'
      path: '/collection'
      fullPath: '/v2/collection'
      preLoaderRoute: typeof V2Appv2LayoutCollectionRouteImport
      parentRoute: typeof V2Appv2LayoutRoute
    }
    '/v2/_appv2Layout/account': {
      id: '/v2/_appv2Layout/account'
      path: '/account'
      fullPath: '/v2/account'
      preLoaderRoute: typeof V2Appv2LayoutAccountRouteImport
      parentRoute: typeof V2Appv2LayoutRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/ai/complete-test': {
      id: '/api/ai/complete-test'
      path: '/api/ai/complete-test'
      fullPath: '/api/ai/complete-test'
      preLoaderRoute: typeof ApiAiCompleteTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppAccountIndexRoute: typeof AppAccountIndexRoute
  AppBrowseIndexRoute: typeof AppBrowseIndexRoute
  AppCollectionIndexRoute: typeof AppCollectionIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppAccountIndexRoute: AppAccountIndexRoute,
  AppBrowseIndexRoute: AppBrowseIndexRoute,
  AppCollectionIndexRoute: AppCollectionIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface V2Appv2LayoutRouteChildren {
  V2Appv2LayoutAccountRoute: typeof V2Appv2LayoutAccountRoute
  V2Appv2LayoutCollectionRoute: typeof V2Appv2LayoutCollectionRoute
  V2Appv2LayoutIndexRoute: typeof V2Appv2LayoutIndexRoute
}

const V2Appv2LayoutRouteChildren: V2Appv2LayoutRouteChildren = {
  V2Appv2LayoutAccountRoute: V2Appv2LayoutAccountRoute,
  V2Appv2LayoutCollectionRoute: V2Appv2LayoutCollectionRoute,
  V2Appv2LayoutIndexRoute: V2Appv2LayoutIndexRoute,
}

const V2Appv2LayoutRouteWithChildren = V2Appv2LayoutRoute._addFileChildren(
  V2Appv2LayoutRouteChildren,
)

interface V2RouteChildren {
  V2Appv2LayoutRoute: typeof V2Appv2LayoutRouteWithChildren
  V2OnboardRoute: typeof V2OnboardRoute
}

const V2RouteChildren: V2RouteChildren = {
  V2Appv2LayoutRoute: V2Appv2LayoutRouteWithChildren,
  V2OnboardRoute: V2OnboardRoute,
}

const V2RouteWithChildren = V2Route._addFileChildren(V2RouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  DotwellKnownFarcasterDotjsonRoute: DotwellKnownFarcasterDotjsonRoute,
  TakeQuizQuizIdRoute: TakeQuizQuizIdRoute,
  V2Route: V2RouteWithChildren,
  DemoIndexRoute: DemoIndexRoute,
  ApiAiCompleteTestRoute: ApiAiCompleteTestRoute,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  DemoMinikitIndexRoute: DemoMinikitIndexRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
